/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 10-Nov-2015 10:41:48 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.Telephone;
import com.etlsolutions.examples.data.api.TelephoneType;
import com.etlsolutions.examples.data.spi.TelephoneSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The TelephonePojo class is generated automatically then modified manually.
 * The TelephonePojo class represents an entry in the telephone table in the database. 
 *
 * @author Zhipeng Chang
 * 
 * @since 1.0.0
 * 
 * @version 1.0.0 - generated by NetBeans.
 * @version 1.0.1 - Add the implementation of TelephoneSpi.
 */

@Entity
@Table(name = "telephone", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {"country_code", "area_code", "telephone_number", "telephone_type"}))
@NamedQueries({
        @NamedQuery(name = QueryNames.findTelephones, query = "from TelephonePojo")
})
public class TelephonePojo implements Serializable, TelephoneSpi {

    @Id
    @Column(name = "telephone_id", unique = true, nullable = false)
    private int id;
    
    @Column(name = "country_code", nullable = false, length = 5)
    private String countryCode;
    
    @Column(name = "area_code", length = 10)
    private String areaCode;
    
    @Column(name = "telephone_number", nullable = false, length = 15)
    private String telephoneNumber;
    
    @Enumerated(EnumType.STRING)    
    @Column(name = "telephone_type", nullable = false, length = 20)
    private TelephoneType telephoneType;
    
    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "telephones")
    private Set<PersonalDetailPojo> personalDetails = new HashSet<>(2);   
    
    public TelephonePojo() {
    }

    public TelephonePojo(int id, String countryCode, TelephoneType telephoneType, String telephoneNumber) {
        this.id = id;
        this.countryCode = countryCode;
        this.telephoneType = telephoneType;
        this.telephoneNumber = telephoneNumber;
    }

    public TelephonePojo(int id, String countryCode, TelephoneType telephoneType, String telephoneNumber, Set<PersonalDetailPojo> personDetails) {
        this.id = id;
        this.countryCode = countryCode;
        this.telephoneType = telephoneType;
        this.telephoneNumber = telephoneNumber;
        this.personalDetails = personDetails;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public String getCountryCode() {
        return this.countryCode;
    }

    @Override
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    @Override
    public String getAreaCode() {
        return areaCode;
    }

    @Override
    public void setAreaCode(String areaCode) {
        this.areaCode = areaCode;
    }


    @Override
    public TelephoneType getTelephoneType() {
        return this.telephoneType;
    }

    @Override
    public void setTelephoneType(TelephoneType telephoneType) {
        this.telephoneType = telephoneType;
    }

    @Override
    public String getTelephoneNumber() {
        return this.telephoneNumber;
    }

    @Override
    public void setTelephoneNumber(String telephoneNumber) {
        this.telephoneNumber = telephoneNumber;
    }

    public Set<PersonalDetailPojo> getPersonalDetails() {
        return this.personalDetails;
    }

    public void setPersonalDetails(Set<PersonalDetailPojo> personalDetails) {
        this.personalDetails = personalDetails;
    }

    @Override
    public boolean hasSameConstraint(Telephone constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean hasSameParameters(Telephone constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 79 * hash + this.id;
        hash = 79 * hash + Objects.hashCode(this.countryCode);
        hash = 79 * hash + Objects.hashCode(this.areaCode);
        hash = 79 * hash + Objects.hashCode(this.telephoneNumber);
        hash = 79 * hash + Objects.hashCode(this.telephoneType);
        hash = 79 * hash + Objects.hashCode(this.personalDetails);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        
        if(this == obj) {
            return true;
        }
        
        if (obj == null) {
            return false;
        }
        
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        final TelephonePojo other = (TelephonePojo) obj;
        
        if (this.id != other.id) {
            return false;
        }
        
        if (!Objects.equals(this.countryCode, other.countryCode)) {
            return false;
        }
        
        if (!Objects.equals(this.areaCode, other.areaCode)) {
            return false;
        }
        
        if (!Objects.equals(this.telephoneNumber, other.telephoneNumber)) {
            return false;
        }
        
        if (this.telephoneType != other.telephoneType) {
            return false;
        }
        
        return Objects.equals(this.personalDetails, other.personalDetails);
    }
}
