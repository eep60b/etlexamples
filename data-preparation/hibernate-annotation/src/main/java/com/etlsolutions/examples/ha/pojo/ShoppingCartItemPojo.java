/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 10-Nov-2015 10:41:48 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.ShoppingCartItem;
import com.etlsolutions.examples.data.spi.ShoppingCartItemSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The ShoppingCartItemPojo class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 * 
 * @since 1.0.0
 * 
 * @version 1.0.0 - generated by NetBeans.
 * @version 1.0.1 - Added implementation of ShoppingCartItemSpi.
 */
@Entity
@Table(name = "shopping_cart_item", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {"customer_id", "item_common_detail_id"}))
@NamedQueries({
        @NamedQuery(name = QueryNames.findShoppingCart, query = "from ShoppingCartItemPojo")
})
public class ShoppingCartItemPojo implements Serializable, ShoppingCartItemSpi<CustomerPojo, ItemCommonDetailPojo> {

    @Id
    @Column(name = "shopping_cart_item_id", unique = true, nullable = false)
    private int id;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customer_id")
    private CustomerPojo customer;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_common_detail_id")
    private ItemCommonDetailPojo itemCommonDetail;
    
    @Column(name = "unit_number", nullable = false)
    private int unitNumber;

    public ShoppingCartItemPojo() {
    }

    public ShoppingCartItemPojo(int id, int unitNumber) {
        this.id = id;
        this.unitNumber = unitNumber;
    }

    public ShoppingCartItemPojo(int shoppingCartId, ItemCommonDetailPojo itemCommonDetail, CustomerPojo customer, int unitNumber) {
        this.id = shoppingCartId;
        this.itemCommonDetail = itemCommonDetail;
        this.customer = customer;
        this.unitNumber = unitNumber;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public ItemCommonDetailPojo getItemCommonDetail() {
        return this.itemCommonDetail;
    }

    @Override
    public void setItemCommonDetail(ItemCommonDetailPojo itemCommonDetail) {
        this.itemCommonDetail = itemCommonDetail;
    }

    @Override
    public CustomerPojo getCustomer() {
        return this.customer;
    }

    @Override
    public void setCustomer(CustomerPojo customer) {
        this.customer = customer;
    }

    @Override
    public int getUnitNumber() {
        return this.unitNumber;
    }

    @Override
    public void setUnitNumber(int unitNumber) {
        this.unitNumber = unitNumber;
    }

    @Override
    public boolean hasSameConstraint(ShoppingCartItem constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean hasSameParameters(ShoppingCartItem constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
