/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 28-Nov-2015 11:36:09 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.Review;
import com.etlsolutions.examples.data.api.Reviewer;
import com.etlsolutions.examples.data.spi.ReviewerSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The ReviewerPojo class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 * 
 * @version 1.0.0 - generated by NetBeans.
 * @version 1.0.1 - Added implementation of Address.
 */
@Entity
@Table(name = "reviewer", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
@NamedQueries({
        @NamedQuery(name = QueryNames.findReviewers, query = "from ReviewerPojo")
})
public class ReviewerPojo implements Serializable, ReviewerSpi<PersonalDetailPojo> {

    @Id
    @Column(name = "reviewer_id", unique = true, nullable = false)
    private int id;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "personal_detail_id")
    private PersonalDetailPojo personalDetail;
    
    @Column(name = "image")
    private byte[] image;
    
    @Column(name = "username", unique = true, nullable = false, length = 200)
    private String username;
    
    @Column(name = "password", nullable = false, length = 200)
    private String password;
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "reviewer")
    private Set<Review> reviews = new HashSet<>(20);

    public ReviewerPojo() {
    }

    public ReviewerPojo(int id, String username, String password) {
        this.id = id;
        this.username = username;
        this.password = password;
    }

    public ReviewerPojo(int id, PersonalDetailPojo personalDetail, byte[] image, String username, String password, Set<Review> reviews) {
        this.id = id;
        this.personalDetail = personalDetail;
        this.image = image;
        this.username = username;
        this.password = password;
        this.reviews = reviews;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public PersonalDetailPojo getPersonalDetail() {
        return this.personalDetail;
    }

    @Override
    public void setPersonalDetail(PersonalDetailPojo personalDetail) {
        this.personalDetail = personalDetail;
    }

    @Override
    public byte[] getImage() {
        return this.image;
    }

    @Override
    public void setImage(byte[] image) {
        this.image = image;
    }
    
    @Override
    public String getUsername() {
        return this.username;
    }

    @Override
    public void setUsername(String username) {
        this.username = username;
    }

    @Override
    public String getPassword() {
        return this.password;
    }

    @Override
    public void setPassword(String password) {
        this.password = password;
    }

    public Set<Review> getReviews() {
        return this.reviews;
    }

    public void setReviews(Set<Review> reviews) {
        this.reviews = reviews;
    }

    @Override
    public boolean hasSameConstraint(Reviewer constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean hasSameParameters(Reviewer constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
