/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 10-Nov-2015 10:41:48 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.Invoice;
import com.etlsolutions.examples.data.api.InvoiceValidity;
import com.etlsolutions.examples.data.api.PaymentDetail;
import com.etlsolutions.examples.data.api.SoldItem;
import com.etlsolutions.examples.data.spi.InvoiceSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.NamedNativeQueries;
import org.hibernate.annotations.NamedNativeQuery;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The InvoicePojo is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 * 
 * @since 1.0.0
 * 
 * @version 1.0.0 - generated by NetBeans.
 * @version 1.0.1 - Added implementation of InvoiceSpi.
 */
@Entity
@Table(name = "invoice", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "reference_number"))
@NamedNativeQueries({
    @NamedNativeQuery(name = QueryNames.findInvoicesNative, query = "select * from invoice", resultClass = InvoicePojo.class)
})
@NamedQueries({
        @NamedQuery(name = QueryNames.findInvoices, query = "from InvoicePojo")
})
public class InvoicePojo implements Serializable, InvoiceSpi<CustomerPojo, AddressPojo> {

    private static final long serialVersionUID = 668304976905526497L;
    
    @Id
    @Column(name = "invoice_id", unique = true, nullable = false)
    private int id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customer_id")
    private CustomerPojo customer;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "delivery_address_id")
    private AddressPojo deliveryAddress;
    
    @Temporal(TemporalType.DATE)
    @Column(name = "invoice_date", nullable = false, length = 13)
    private Date invoiceDate;
    
    @Column(name = "total", nullable = false, precision = 10)
    private BigDecimal total;
    
    @Enumerated(EnumType.STRING)
    @Column(name = "validity", nullable = false)
    private InvoiceValidity validity;
    
    @Column(name = "reference_number", unique = true, nullable = false, length = 12)
    private String referenceNumber;
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "invoice")
    private Set<SoldItem> soldItems = new HashSet<>(10);
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "invoice")
    private Set<PaymentDetail> paymentDetails = new HashSet<>(2);

    @OneToOne
    @PrimaryKeyJoinColumn
    private ViewInvoicePojo viewInvoice;

    public InvoicePojo() {
    }

    public InvoicePojo(int id, BigDecimal total) {
        this.id = id;
        this.total = total;
    }

    /**
     * 
     * @param id
     * @param customer
     * @param invoiceDate
     * @param total
     * @param validity
     * @param soldItems
     * @param paymentDetails 
     */
    public InvoicePojo(int id, CustomerPojo customer, Date invoiceDate, BigDecimal total, InvoiceValidity validity, Set<SoldItem> soldItems, Set<PaymentDetail> paymentDetails) {
        this.id = id;
        this.customer = customer;
        this.invoiceDate = invoiceDate;
        this.total = total;
        this.validity = validity;
        this.soldItems = soldItems;
        this.paymentDetails = paymentDetails;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public CustomerPojo getCustomer() {
        return this.customer;
    }

    @Override
    public void setCustomer(CustomerPojo customer) {
        this.customer = customer;
    }

    @Override
    public AddressPojo getDeliveryAddress() {
        return deliveryAddress;
    }

    @Override
    public void setDeliveryAddress(AddressPojo deliveryAddress) {
        this.deliveryAddress = deliveryAddress;
    }    
    
    @Override
    public Date getInvoiceDate() {
        return this.invoiceDate;
    }

    @Override
    public void setInvoiceDate(Date invoiceDate) {
        this.invoiceDate = invoiceDate;
    }

    @Override
    public BigDecimal getTotal() {
        return this.total;
    }

    @Override
    public void setTotal(BigDecimal total) {
        this.total = total;
    }

    @Override
    public InvoiceValidity getValidity() {
        return this.validity;
    }

    @Override
    public void setValidity(InvoiceValidity validity) {
        this.validity = validity;
    }

    public Set<SoldItem> getSoldItems() {
        return soldItems;
    }

    public void setSoldItems(Set<SoldItem> soldItems) {
        this.soldItems = soldItems;
    }

    public Set<PaymentDetail> getPaymentDetails() {
        return paymentDetails;
    }

    public void setPaymentDetails(Set<PaymentDetail> paymentDetails) {
        this.paymentDetails = paymentDetails;
    }

    public ViewInvoicePojo getViewInvoice() {
        return viewInvoice;
    }

    public void setViewInvoice(ViewInvoicePojo viewInvoice) {
        this.viewInvoice = viewInvoice;
    }

    @Override
    public String getReferenceNumber() {
        return referenceNumber;
    }

    @Override
    public void setReferenceNumber(String referenceNumber) {
        this.referenceNumber = referenceNumber;
    }

    @Override
    public boolean hasSameConstraint(Invoice invoice) {
        return getReferenceNumber().equals(invoice.getReferenceNumber());
    }

    @Override
    public boolean hasSameParameters(Invoice constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
