/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 10-Nov-2015 10:41:48 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.VoucherPayment;
import com.etlsolutions.examples.data.spi.VoucherPaymentSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The VoucherPaymentPojo class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 * 
 * @since 1.0.0
 * 
 * @version 1.0.0 - generated by NetBeans.
 * @version 1.0.1 - Added implementation of VoucherPayment.
 */
@Entity
@Table(name = "voucher_payment", schema = "public")
@NamedQueries({
        @NamedQuery(name = QueryNames.findVoucherPayments, query = "from VoucherPaymentPojo")
})
public class VoucherPaymentPojo implements Serializable, VoucherPaymentSpi<PaymentDetailPojo, VoucherPojo> {

    @Id
    @Column(name = "payment_id", unique = true, nullable = false)
    private int id;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumns({
        @JoinColumn(name = "payment_id", referencedColumnName = "payment_id", unique = true, nullable = false, insertable = false, updatable = false),
        @JoinColumn(name = "payment_type", referencedColumnName = "payment_type", nullable = false, insertable = false, updatable = false)})
    private PaymentDetailPojo paymentDetail;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "voucher_id")
    private VoucherPojo voucher;

    public VoucherPaymentPojo() {
    }

    public VoucherPaymentPojo(int id, PaymentDetailPojo payment) {
        this.id = id;
        this.paymentDetail = payment;
    }

    public VoucherPaymentPojo(int id, PaymentDetailPojo payment, VoucherPojo voucher) {
        this.id = id;
        this.paymentDetail = payment;
        this.voucher = voucher;
    }


    public int getId() {
        return this.id;
    }


    public void setId(int id) {
        this.id = id;
    }

    @Override
    public PaymentDetailPojo getPaymentDetail() {
        return this.paymentDetail;
    }

    /**
     *
     * @param paymentDetail
     */
    @Override
    public void setPaymentDetail(PaymentDetailPojo paymentDetail) {
        this.paymentDetail = paymentDetail;
    }

    @Override
    public VoucherPojo getVoucher() {
        return this.voucher;
    }

    @Override
    public void setVoucher(VoucherPojo voucher) {
        this.voucher = voucher;
    }

    @Override
    public boolean hasSameConstraint(VoucherPayment constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean hasSameParameters(VoucherPayment constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getVoucherId() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getPaymentId() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
