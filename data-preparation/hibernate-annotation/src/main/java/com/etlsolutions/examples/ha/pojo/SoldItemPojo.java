/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 10-Nov-2015 10:41:48 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.SoldItem;
import com.etlsolutions.examples.data.spi.SoldItemSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.NamedNativeQueries;
import org.hibernate.annotations.NamedNativeQuery;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The SoldItemPojo class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 * 
 * @since 1.0.0
 * 
 * @version 1.0.0 - generated by NetBeans.
 */
@Entity
@Table(name = "sold_item", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {"invoice_id", "item_common_detail_id"}))
@NamedNativeQueries({
    @NamedNativeQuery(name = QueryNames.findSoldItemsNative, query = "select * from sold_item", resultClass = SoldItemPojo.class)
})
@NamedQueries({
        @NamedQuery(name = QueryNames.findSoldItemSolds, query = "from SoldItemPojo")
})
public class SoldItemPojo implements Serializable, SoldItemSpi<InvoicePojo, ItemCommonDetailPojo> {

    @Id
    @Column(name = "sold_item_id", unique = true, nullable = false)
    private int id;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "invoice_id")
    private InvoicePojo invoice;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_common_detail_id")
    private ItemCommonDetailPojo itemCommonDetail;
    
    @Column(name = "quantity", nullable = false)
    private int quantity;
    
    @Column(name = "unit_price", nullable = false, precision = 10)
    private BigDecimal unitPrice;
    
    public SoldItemPojo() {
    }

    public SoldItemPojo(int id, BigDecimal unitPrice) {
        this.id = id;
        this.unitPrice = unitPrice;
    }

    public SoldItemPojo(int id, ItemCommonDetailPojo itemCommonDetail, InvoicePojo invoice, Integer quantity, BigDecimal unitPrice) {
        this.id = id;
        this.itemCommonDetail = itemCommonDetail;
        this.invoice = invoice;
        this.quantity = quantity;
        this.unitPrice = unitPrice;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public ItemCommonDetailPojo getItemCommonDetail() {
        return this.itemCommonDetail;
    }

    @Override
    public void setItemCommonDetail(ItemCommonDetailPojo itemCommonDetail) {
        this.itemCommonDetail = itemCommonDetail;
    }

    @Override
    public InvoicePojo getInvoice() {
        return this.invoice;
    }

    @Override
    public void setInvoice(InvoicePojo invoice) {
        this.invoice = invoice;
    }

    @Override
    public int getQuantity() {
        return this.quantity;
    }

    @Override
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Override
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    @Override
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    @Override
    public boolean hasSameConstraint(SoldItem constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean hasSameParameters(SoldItem constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
