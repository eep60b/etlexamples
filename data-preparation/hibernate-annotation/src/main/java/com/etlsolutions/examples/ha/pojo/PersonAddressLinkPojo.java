/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.ha.pojo;
// Generated 10-Nov-2015 10:41:48 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.AddressType;
import com.etlsolutions.examples.data.api.PersonAddressLink;
import com.etlsolutions.examples.data.spi.PersonAddressLinkSpi;
import com.etlsolutions.examples.ha.control.QueryNames;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * The PersonAddressLinkPojo class is generated automatically then modified
 * manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 *
 * @version 1.0.0 - generated by NetBeans.
 * @version 1.0.1 - Add the implementation of PersonAddressLinkSpi.
 */
@Entity
@Table(name = "person_address_link", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {"address_id", "personal_detail_id", "address_type"}))
@NamedQueries({
    @NamedQuery(name = QueryNames.findPersonAddressLinks, query = "from PersonAddressLinkPojo")
})
public class PersonAddressLinkPojo implements Serializable, PersonAddressLinkSpi<AddressPojo, PersonalDetailPojo> {

    @Id
    @Column(name = "link_id", unique = true, nullable = false)
    private int id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "address_id")
    private AddressPojo address;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "personal_detail_id")
    private PersonalDetailPojo personalDetail;

    @Enumerated(EnumType.STRING)    
    @Column(name = "address_type", nullable = false)
    private AddressType addressType;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personAddressLink")
    private Set<MastercardPaymentPojo> mastercardPayments = new HashSet<>(1);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personAddressLink")
    private Set<VisacardPaymentPojo> visacardPayments = new HashSet<>(1);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personAddressLink")
    private Set<DebitcardPaymentPojo> debitcardPayments = new HashSet<>(1);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personAddressLink")
    private Set<CustomerPojo> customers = new HashSet<>(1);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personAddressLink")
    private Set<AmexcardPaymentPojo> amexcardPayments = new HashSet<>(1);

    /**
     * 
     */
    public PersonAddressLinkPojo() {
    }

    /**
     * 
     * @param id 
     */
    public PersonAddressLinkPojo(int id) {
        this.id = id;
    }

    /**
     * 
     * @param id
     * @param address
     * @param personalDetail
     * @param mastercardPayments
     * @param visacardPayments
     * @param debitcardPayments
     * @param amexcardPayments
     * @param customers 
     */
    public PersonAddressLinkPojo(int id, AddressPojo address, PersonalDetailPojo personalDetail, Set<MastercardPaymentPojo> mastercardPayments,
            Set<VisacardPaymentPojo> visacardPayments, Set<DebitcardPaymentPojo> debitcardPayments, Set<AmexcardPaymentPojo> amexcardPayments, Set<CustomerPojo> customers) {
        this.id = id;
        this.address = address;
        this.personalDetail = personalDetail;
        this.mastercardPayments = mastercardPayments;
        this.visacardPayments = visacardPayments;
        this.debitcardPayments = debitcardPayments;
        this.amexcardPayments = amexcardPayments;
        this.customers = customers;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public AddressPojo getAddress() {
        return this.address;
    }

    @Override
    public void setAddress(AddressPojo address) {
        this.address = address;
    }

    @Override
    public PersonalDetailPojo getPersonalDetail() {
        return this.personalDetail;
    }

    @Override
    public void setPersonalDetail(PersonalDetailPojo personalAddress) {
        this.personalDetail = personalAddress;
    }

    @Override
    public void setAddressType(AddressType addresstype) {
        this.addressType = addresstype;
    }

    @Override
    public AddressType getAddressType() {
        return addressType;
    }

    public Set<MastercardPaymentPojo> getMastercardPayments() {
        return this.mastercardPayments;
    }

    public void setMastercardPayments(Set<MastercardPaymentPojo> mastercardPayments) {
        this.mastercardPayments = mastercardPayments;
    }

    public Set<VisacardPaymentPojo> getVisacardPayments() {
        return this.visacardPayments;
    }

    public void setVisacardPayments(Set<VisacardPaymentPojo> visacardPayments) {
        this.visacardPayments = visacardPayments;
    }

    public Set<DebitcardPaymentPojo> getDebitcardPayments() {
        return this.debitcardPayments;
    }

    public void setDebitcardPayments(Set<DebitcardPaymentPojo> debitcardPayments) {
        this.debitcardPayments = debitcardPayments;
    }

    public Set<AmexcardPaymentPojo> getAmexcardPayments() {
        return this.amexcardPayments;
    }

    public void setAmexcardPayments(Set<AmexcardPaymentPojo> amexcardPayments) {
        this.amexcardPayments = amexcardPayments;
    }

    public Set<CustomerPojo> getCustomers() {
        return customers;
    }

    public void setCustomers(Set<CustomerPojo> customers) {
        this.customers = customers;
    }

    @Override
    public boolean hasSameConstraint(PersonAddressLink constraintable) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean hasSameParameters(PersonAddressLink personAddressLink) {
        return hasSameConstraint(personAddressLink);
    }

}
