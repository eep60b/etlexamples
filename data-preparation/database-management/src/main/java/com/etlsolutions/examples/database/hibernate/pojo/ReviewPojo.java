/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.database.hibernate.pojo;
// Generated 19-Nov-2015 11:29:31 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.utility.ConstrainableUtilities;
import com.etlsolutions.examples.data.api.Review;
import com.etlsolutions.examples.data.spi.ReviewSpi;
import java.io.Serializable;
import java.util.Objects;
import org.hibernate.proxy.HibernateProxy;

/**
 * The ReviewPojo class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 *
 * @version 1.0.0 - Generated by NetBeans.
 * @version 1.0.1 - Use integer for the fields "id" and "reviewRanking".
 * @version 2.0.0 - Change itemCommonDetailId to i. Add r.
 * @version 2.0.1 - Change the field name from "reviewId" to "id".
 */
public class ReviewPojo implements Serializable, ReviewSpi<ItemCommonDetailPojo, ReviewerPojo> {
    
    private static final long serialVersionUID = 218777667777212316L;
    
    private int id;
    private ReviewerPojo reviewer;
    private ItemCommonDetailPojo itemCommonDetail;
    private int reviewRanking;
    private String reviewText;

    /**
     * Construct a default object with no fields initialised.
     */
    public ReviewPojo() {
    }

    /**
     * 
     * @param id 
     */
    public ReviewPojo(int id) {
        this.id = id;
    }

    /**
     * Construct an object using the given parameters.
     * @param reviewer
     * @param itemCommonDetail
     * @param reviewRanking
     * @param reviewText 
     */
    public ReviewPojo(ReviewerPojo reviewer, ItemCommonDetailPojo itemCommonDetail, int reviewRanking, String reviewText) {
        this.reviewer = reviewer;
        this.itemCommonDetail = itemCommonDetail;
        this.reviewRanking = reviewRanking;
        this.reviewText = reviewText;
    }    
    
    /**
     * 
     * @param id
     * @param reviewer
     * @param itemCommonDetail
     * @param reviewRanking
     * @param reviewText 
     */
    public ReviewPojo(int id, ReviewerPojo reviewer, ItemCommonDetailPojo itemCommonDetail, int reviewRanking, String reviewText) {
        this(reviewer, itemCommonDetail, reviewRanking, reviewText);
        this.id = id;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public ReviewerPojo getReviewer() {
        return reviewer;
    }

    @Override
    public void setReviewer(ReviewerPojo reviewer) {
        this.reviewer = reviewer;
    }

    @Override
    public ItemCommonDetailPojo getItemCommonDetail() {
        return itemCommonDetail;
    }

    @Override
    public void setItemCommonDetail(ItemCommonDetailPojo itemCommonDetail) {
        this.itemCommonDetail = itemCommonDetail;
    }

    @Override
    public int getReviewRanking() {
        return reviewRanking;
    }

    @Override
    public void setReviewRanking(int reviewRanking) {
        this.reviewRanking = reviewRanking;
    }

    @Override
    public String getReviewText() {
        return this.reviewText;
    }

    @Override
    public void setReviewText(String reviewText) {
        this.reviewText = reviewText;
    }

    @Override
    public boolean hasSameConstraint(Review review) {
        
        if (this == review) {
            return true;
        }

        if (review == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return review.hasSameConstraint(((Review) ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if (review instanceof HibernateProxy) {
            return hasSameConstraint(((Review) (((HibernateProxy) review).getHibernateLazyInitializer().getImplementation())));
        }
        
        return ConstrainableUtilities.hasSameConstraint(reviewer, review.getReviewer()) && ConstrainableUtilities.hasSameConstraint(itemCommonDetail , review.getItemCommonDetail());
    }

    @Override
    public boolean hasSameParameters(Review review) {
        
        if (this == review) {
            return true;
        }

        if (review == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return review.hasSameParameters(((Review) ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if (review instanceof HibernateProxy) {
            return hasSameParameters(((Review) (((HibernateProxy) review).getHibernateLazyInitializer().getImplementation())));
        }

        if(reviewRanking != review.getReviewRanking()) {
            return false;
        }
        
        if(!Objects.equals(reviewText, review.getReviewText())) {
            return false;
        }
        
        return ConstrainableUtilities.hasSameParameters(reviewer, review.getReviewer()) && ConstrainableUtilities.hasSameParameters(itemCommonDetail, review.getItemCommonDetail());
    }

    @Override
    public int hashCode() {
        
        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().hashCode();
        }
        
        int hash = 7;
        hash = 83 * hash + this.id;
        hash = 83 * hash + Objects.hashCode(this.reviewer);
        hash = 83 * hash + Objects.hashCode(this.itemCommonDetail);
        hash = 83 * hash + this.reviewRanking;
        hash = 83 * hash + Objects.hashCode(this.reviewText);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        
        if(this == obj) {
            return true;
        }
        
        if (obj == null) {
            return false;
        }
        
        if(this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().equals(obj);
        }

        if(obj instanceof HibernateProxy) {
            return equals(((HibernateProxy)obj).getHibernateLazyInitializer().getImplementation());
        }
        
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        final ReviewPojo other = (ReviewPojo) obj;
        
        if (this.id != other.id) {
            return false;
        }
        
        if (!Objects.equals(this.reviewer, other.reviewer)) {
            return false;
        }
        
        if (!Objects.equals(this.itemCommonDetail, other.itemCommonDetail)) {
            return false;
        }
        
        if (this.reviewRanking != other.reviewRanking) {
            return false;
        }
        
        return Objects.equals(this.reviewText, other.reviewText);
    }

    @Override
    public String toString() {
        return "ReviewPojo{id=" + id + ", reviewer=" + (reviewer == null ? null : reviewer.getUsername()) + ", item barcode=" + (itemCommonDetail == null ? null : itemCommonDetail.getBarcode()) + '}';
    }
}
