/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.database.hibernate.pojo;
// Generated 19-Nov-2015 11:29:31 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.utility.ConstrainableUtilities;
import com.etlsolutions.examples.data.api.Author;
import com.etlsolutions.examples.data.api.Book;
import com.etlsolutions.examples.data.spi.AuthorSpi;
import java.io.Serializable;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import org.hibernate.proxy.HibernateProxy;

/**
 * The AuthorPojor class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 *
 * @version 1.0.0 - Generated by NetBeans.
 * @version 1.1.0 - Change id type to integer.
 * @version 1.1.1 - Use generic types.
 * @version 1.2.0 - Change image type to byte[].
 * @version 1.2.1 - Add static field serialVersionUID.
 * @version 1.2.2 - Add the non-set-arguments constructor.
 * @version 1.2.3 - Set the initial capacities for the set fields.
 * @version 1.3.0 - Add equals and hashCode methods.
 *
 */
public class AuthorPojo implements Serializable, AuthorSpi<PersonalDetailPojo> {

    private static final long serialVersionUID = 784605446566451829L;

    private int id;
    private PersonalDetailPojo personalDetail;
    private byte[] image;
    private byte[] biography;
    private String webpageUrl;
    private Set<Book> books = new HashSet<>(5);

    /**
     * Construct an empty default object. All integer fields are zero. all the
     * set fields will be empty. All other fields are null.
     */
    public AuthorPojo() {
    }

    /**
     * Construct an object with the given ID and personal details.
     *
     * @param id - The ID.
     * @param personalDetail - The personal details.
     */
    public AuthorPojo(int id, PersonalDetailPojo personalDetail) {
        this.id = id;
        this.personalDetail = personalDetail;
    }

    /**
     *
     * @param personalDetail
     * @param image
     * @param biography
     * @param webpageUrl
     */
    public AuthorPojo(PersonalDetailPojo personalDetail, byte[] image, byte[] biography, String webpageUrl) {
        this.personalDetail = personalDetail;
        this.image = (image == null ? null : Arrays.copyOf(image, image.length));
        this.biography = (biography == null ? null : Arrays.copyOf(biography, biography.length));
        this.webpageUrl = webpageUrl;
    }

    /**
     *
     * @param id
     * @param personalDetail
     * @param image
     * @param biography
     * @param webpageUrl
     */
    public AuthorPojo(int id, PersonalDetailPojo personalDetail, byte[] image, byte[] biography, String webpageUrl) {

        this(personalDetail, image, biography, webpageUrl);
        this.id = id;
    }

    /**
     * Construct an object with all fields initialised.
     * @param id
     * @param personalDetail
     * @param image
     * @param biography
     * @param webpageUrl
     * @param books
     */
    public AuthorPojo(int id, PersonalDetailPojo personalDetail, byte[] image, byte[] biography, String webpageUrl, Set<Book> books) {
        this(id, personalDetail, image, biography, webpageUrl);
        this.books = books == null ? null : new HashSet<>(books);
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public PersonalDetailPojo getPersonalDetail() {
        return this.personalDetail;
    }

    @Override
    public void setPersonalDetail(PersonalDetailPojo personalDetail) {
        this.personalDetail = personalDetail;
    }

    @Override
    public byte[] getImage() {
        return image == null ? null : Arrays.copyOf(image, image.length);
    }

    @Override
    public void setImage(byte[] image) {
        this.image = (image == null ? null : Arrays.copyOf(image, image.length));
    }

    @Override
    public byte[] getBiography() {
        return (biography == null ? null : Arrays.copyOf(biography, biography.length));
    }

    @Override
    public void setBiography(byte[] biography) {
        this.biography = (biography == null ? null : Arrays.copyOf(biography, biography.length));
    }

    @Override
    public String getWebpageUrl() {
        return this.webpageUrl;
    }

    @Override
    public void setWebpageUrl(String webpageUrl) {
        this.webpageUrl = webpageUrl;
    }

    public Set<Book> getBooks() {
        return books == null ? null : new HashSet<>(books);
    }

    public void setBooks(Set<Book> books) {
        this.books = books == null ? null : new HashSet<>(books);
    }

    @Override
    public int hashCode() {

        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().hashCode();
        }

        int hash = 5;
        hash = 29 * hash + this.id;
        hash = 29 * hash + Objects.hashCode(this.personalDetail);
        hash = 29 * hash + Objects.hashCode(this.webpageUrl);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {

        if (this == obj) {
            return true;
        }

        if (obj == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().equals(obj);
        }

        if (obj instanceof HibernateProxy) {
            return equals(((HibernateProxy) obj).getHibernateLazyInitializer().getImplementation());
        }

        if (getClass() != obj.getClass()) {
            return false;
        }

        final AuthorPojo other = (AuthorPojo) obj;

        if (this.id != other.id) {
            return false;
        }

        if (!Objects.equals(this.personalDetail, other.personalDetail)) {
            return false;
        }

        if (!Arrays.equals(this.image, other.image)) {
            return false;
        }

        if (!Arrays.equals(this.biography, other.biography)) {
            return false;
        }

        return Objects.equals(this.webpageUrl, other.webpageUrl);
    }

    @Override
    public boolean hasSameConstraint(Author author) {

        if (author == null) {
            return false;
        }

        if (this == author) {
            return true;
        }

        if (this instanceof HibernateProxy) {
            return author.hasSameConstraint(((Author) ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if (author instanceof HibernateProxy) {
            return hasSameConstraint(((Author) (((HibernateProxy) author).getHibernateLazyInitializer().getImplementation())));
        }

        return ConstrainableUtilities.hasSameConstraint(personalDetail, author.getPersonalDetail());
    }

    @Override
    public boolean hasSameParameters(Author author) {
        
        if (this == author) {
            return true;
        }

        if (author == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return author.hasSameParameters(((Author) ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if (author instanceof HibernateProxy) {
            return hasSameParameters(((Author) (((HibernateProxy) author).getHibernateLazyInitializer().getImplementation())));
        }

        if (!(Arrays.equals(getBiography(), author.getBiography()) && Arrays.equals(getImage(), author.getImage()) && Objects.equals(getWebpageUrl(), author.getWebpageUrl()))) {
            return false;
        }
        
        return ConstrainableUtilities.hasSameParameters(personalDetail, author.getPersonalDetail());
    }

    @Override
    public String toString() {
        return "AuthorPojo{" + "id=" + id + ", personalDetail=" + personalDetail + '}';
    }
}
