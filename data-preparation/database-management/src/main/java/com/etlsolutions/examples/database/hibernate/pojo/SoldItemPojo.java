/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.database.hibernate.pojo;
// Generated 04-Dec-2015 14:16:58 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.utility.ConstrainableUtilities;
import com.etlsolutions.examples.data.api.SoldItem;
import com.etlsolutions.examples.data.spi.SoldItemSpi;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;
import org.hibernate.proxy.HibernateProxy;

/**
 * The SoldItemPojo class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 *
 * @version 1.0.0 - Generated by NetBeans.
 * @version 1.0.1 - Change the field name from "soldItemId" to "id".
 * @version 1.1.0 - Use the integer type for the field "id".
 * 
 */
public class SoldItemPojo implements Serializable, SoldItemSpi<InvoicePojo, ItemCommonDetailPojo> {
    
    private static final long serialVersionUID = 219255077449987974L;
            
    private int id;
    private ItemCommonDetailPojo itemCommonDetail;
    private InvoicePojo invoice;
    private int quantity;
    private BigDecimal unitPrice;

    /**
     * 
     */
    public SoldItemPojo() {
    }

    /**
     * 
     * @param id
     * @param unitPrice 
     */
    public SoldItemPojo(int id, BigDecimal unitPrice) {
        this.id = id;
        this.unitPrice = unitPrice;
    }

    /**
     * 
     * @param itemCommonDetail
     * @param invoice
     * @param quantity
     * @param unitPrice 
     */
    public SoldItemPojo(ItemCommonDetailPojo itemCommonDetail, InvoicePojo invoice, int quantity, BigDecimal unitPrice) {
        this.itemCommonDetail = itemCommonDetail;
        this.invoice = invoice;
        this.quantity = quantity;
        this.unitPrice = unitPrice;
    }    
    
    
    /**
     * 
     * @param id
     * @param itemCommonDetail
     * @param invoice
     * @param quantity
     * @param unitPrice 
     */
    public SoldItemPojo(int id, ItemCommonDetailPojo itemCommonDetail, InvoicePojo invoice, int quantity, BigDecimal unitPrice) {
        this(itemCommonDetail, invoice, quantity, unitPrice);
        this.id = id;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public ItemCommonDetailPojo getItemCommonDetail() {
        return this.itemCommonDetail;
    }

    @Override
    public void setItemCommonDetail(ItemCommonDetailPojo itemCommonDetail) {
        this.itemCommonDetail = itemCommonDetail;
    }

    @Override
    public InvoicePojo getInvoice() {
        return this.invoice;
    }

    @Override
    public void setInvoice(InvoicePojo invoice) {
        this.invoice = invoice;
    }

    @Override
    public int getQuantity() {
        return this.quantity;
    }

    @Override
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Override
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    @Override
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    @Override
    public boolean hasSameConstraint(SoldItem soldItem) {
       
        if(this == soldItem) {
            return true;
        }
        
        if (soldItem == null) {
            return false;
        }
           
        if(this instanceof HibernateProxy) {
            return soldItem.hasSameConstraint(((SoldItem)((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if(soldItem instanceof HibernateProxy) {
            return hasSameConstraint(((SoldItem)(((HibernateProxy)soldItem).getHibernateLazyInitializer().getImplementation())));
        }          
        
        return ConstrainableUtilities.hasSameConstraint(itemCommonDetail, soldItem.getItemCommonDetail()) && ConstrainableUtilities.hasSameConstraint(invoice, soldItem.getInvoice());
    }

    @Override
    public boolean hasSameParameters(SoldItem soldItem) {
        
        if(this == soldItem) {
            return true;
        }
        
        if (soldItem == null) {
            return false;
        }
           
        if(this instanceof HibernateProxy) {
            return soldItem.hasSameParameters(((SoldItem)((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if(soldItem instanceof HibernateProxy) {
            return hasSameParameters(((SoldItem)(((HibernateProxy)soldItem).getHibernateLazyInitializer().getImplementation())));
        }          
        
        if(!Objects.equals(this.unitPrice, soldItem.getUnitPrice())){
            
            return false;
        }
        
        if (this.quantity != soldItem.getQuantity()) {
            return false;
        }
        
        return ConstrainableUtilities.hasSameParameters(itemCommonDetail, soldItem.getItemCommonDetail()) && ConstrainableUtilities.hasSameParameters(invoice, soldItem.getInvoice());
    }

    @Override
    public int hashCode() {
        
        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().hashCode();
        }        
        
        int hash = 5;
        hash = 17 * hash + this.id;
        hash = 17 * hash + Objects.hashCode(this.itemCommonDetail);
        hash = 17 * hash + Objects.hashCode(this.invoice);
        hash = 17 * hash + this.quantity;
        hash = 17 * hash + Objects.hashCode(this.unitPrice);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        
        if(this == obj) {
            return true;
        }
        
        if (obj == null) {
            return false;
        }
        
        
        if(this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().equals(obj);
        }

        if(obj instanceof HibernateProxy) {
            return equals(((HibernateProxy)obj).getHibernateLazyInitializer().getImplementation());
        }
                
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        final SoldItemPojo other = (SoldItemPojo) obj;
        
        if (this.id != other.id) {
            return false;
        }
        
        if (!Objects.equals(this.itemCommonDetail, other.itemCommonDetail)) {
            return false;
        }
        
        if (!Objects.equals(this.invoice, other.invoice)) {
            return false;
        }
        
        if (this.quantity != other.quantity) {
            return false;
        }
        
        return Objects.equals(this.unitPrice, other.unitPrice);
    }


}
