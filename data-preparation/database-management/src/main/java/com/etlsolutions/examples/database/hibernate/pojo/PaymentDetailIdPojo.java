/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.database.hibernate.pojo;
// Generated 19-Nov-2015 11:29:31 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.data.api.PaymentType;
import com.etlsolutions.examples.data.spi.PaymentDetailIdSpi;
import com.etlsolutions.examples.utility.annotation.ConventionalJavaBeanClass;
import java.io.Serializable;
import java.util.Objects;
import org.hibernate.proxy.HibernateProxy;

/**
 * The PaymentDetailIdPojo class is generated automatically then modified
 * manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 *
 * @version 1.0.0 - Generated by NetBeans.
 * @version 1.0.1 - Change the field name from "addressId" to "id".
 * @version 1.0.2 - Add the static field serialVersionUID.
 * @version 1.0.3 - Use Hibernate.equals for the equals method.
 * @version 1.1.0 - use the integer type for the field "id".
 * @version 2.0.0 - Change the equals and hashCode by using only the id field.
 */
@ConventionalJavaBeanClass
public class PaymentDetailIdPojo implements Serializable, PaymentDetailIdSpi {

    private static final long serialVersionUID = 878325333612011236L;

    private int id;
    private PaymentType paymentType;

    /**
     * Construct an empty default object. All integer fields are zero. all the
     * set fields will be empty. All other fields are null.
     */
    public PaymentDetailIdPojo() {
    }

    /**
     * Construct an object with only payment type is initialised.
     *
     * @param paymentType
     */
    public PaymentDetailIdPojo(PaymentType paymentType) {
        this.paymentType = paymentType;
    }

    /**
     *
     * @param id
     * @param paymentType
     */
    public PaymentDetailIdPojo(int id, PaymentType paymentType) {
        this.id = id;
        this.paymentType = paymentType;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public PaymentType getPaymentType() {
        return this.paymentType;
    }

    @Override
    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }

    @Override
    public int hashCode() {
        
        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().hashCode();
        }
                
        int hash = 5;
        hash = 59 * hash + this.id;
        hash = 59 * hash + Objects.hashCode(this.paymentType);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        
        if(this == obj) {
            return true;
        }
        
        if (obj == null) {
            return false;
        }
        
        if(this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().equals(obj);
        }

        if(obj instanceof HibernateProxy) {
            return equals(((HibernateProxy)obj).getHibernateLazyInitializer().getImplementation());
        }
        
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        final PaymentDetailIdPojo other = (PaymentDetailIdPojo) obj;
        
        if (this.id != other.id) {
            return false;
        }
        
        return this.paymentType == other.paymentType;
    }

    @Override
    public String toString() {
        return "PaymentDetailIdPojo{" + "id=" + id + ", paymentType=" + paymentType + '}';
    }
}
