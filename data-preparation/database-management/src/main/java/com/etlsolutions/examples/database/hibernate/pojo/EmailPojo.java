/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.etlsolutions.examples.database.hibernate.pojo;
// Generated 19-Nov-2015 11:29:31 by Hibernate Tools 4.3.1

import com.etlsolutions.examples.utility.ConstrainableUtilities;
import com.etlsolutions.examples.data.api.Email;
import com.etlsolutions.examples.data.spi.EmailSpi;
import java.io.Serializable;
import java.util.Objects;
import org.hibernate.proxy.HibernateProxy;

/**
 * The EmailPojo class class is generated automatically then modified manually.
 *
 * @author Zhipeng Chang
 *
 * @since 1.0.0
 *
 * @version 1.0.0 - Generated by NetBeans.
 * @version 1.0.1 - Change the field name from "emailId" to "id".
 * @version 1.1.0 - Change the field "id" type to integer.
 * @version 1.2.0 - Add the implementation of EmailSpi.
 * @version 1.2.2 - Add the static field serialVersionUID.
 */
public class EmailPojo implements Serializable, EmailSpi<PersonalDetailPojo> {

    private static final long serialVersionUID = 820105605268801937L;

    private int id;
    private PersonalDetailPojo personalDetail;
    private String emailAddress;

    /**
     * Construct a default object. All integer fields are zero. All other fields
     * are null.
     */
    public EmailPojo() {
    }

    /**
     * Construct an object using the given ID and email address.
     *
     * @param id - The given ID.
     * @param emailAddress - The given email address
     */
    public EmailPojo(int id, String emailAddress) {
        this.id = id;
        this.emailAddress = emailAddress;
    }

    /**
     * Construct an object with the given personal detail and email address. The
     * ID number will be zero.
     *
     * @param personalDetail
     * @param emailAddress
     */
    public EmailPojo(PersonalDetailPojo personalDetail, String emailAddress) {
        this.personalDetail = personalDetail;
        this.emailAddress = emailAddress;
    }

    /**
     *
     * @param id
     * @param personalDetail
     * @param emailAddress
     */
    public EmailPojo(int id, PersonalDetailPojo personalDetail, String emailAddress) {
        this(personalDetail, emailAddress);
        this.id = id;
    }

    @Override
    public int getId() {
        return this.id;
    }

    @Override
    public void setId(int id) {
        this.id = id;
    }

    @Override
    public PersonalDetailPojo getPersonalDetail() {
        return this.personalDetail;
    }

    @Override
    public void setPersonalDetail(PersonalDetailPojo personalDetail) {
        this.personalDetail = personalDetail;
    }

    @Override
    public String getEmailAddress() {
        return this.emailAddress;
    }

    @Override
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    @Override
    public boolean hasSameConstraint(Email email) {

        if (this == email) {
            return true;
        }

        if (email == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return email.hasSameConstraint(((Email) ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if (email instanceof HibernateProxy) {
            return hasSameConstraint(((Email) (((HibernateProxy) email).getHibernateLazyInitializer().getImplementation())));
        }

        return Objects.equals(emailAddress, email.getEmailAddress());
    }

    @Override
    public boolean hasSameParameters(Email email) {

        if (this == email) {
            return true;
        }

        if (email == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return email.hasSameParameters(((Email) ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation()));
        }

        if (email instanceof HibernateProxy) {
            return hasSameParameters(((Email) (((HibernateProxy) email).getHibernateLazyInitializer().getImplementation())));
        }

        if (!Objects.equals(emailAddress, email.getEmailAddress())) {
            return false;
        }

        return ConstrainableUtilities.hasSameParameters(personalDetail, email.getPersonalDetail());
    }

    @Override
    public int hashCode() {

        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().hashCode();
        }

        int hash = 3;
        hash = 29 * hash + this.getId();
        hash = 29 * hash + Objects.hashCode(this.personalDetail);
        hash = 29 * hash + Objects.hashCode(this.emailAddress);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {

        if (this == obj) {
            return true;
        }

        if (obj == null) {
            return false;
        }

        if (this instanceof HibernateProxy) {
            return ((HibernateProxy) this).getHibernateLazyInitializer().getImplementation().equals(obj);
        }

        if (obj instanceof HibernateProxy) {
            return equals(((HibernateProxy) obj).getHibernateLazyInitializer().getImplementation());
        }

        if (getClass() != obj.getClass()) {
            return false;
        }

        final EmailPojo other = (EmailPojo) obj;

        if (getId() != other.getId()) {
            return false;
        }

        if (!Objects.equals(this.getPersonalDetail(), other.personalDetail)) {
            return false;
        }

        return Objects.equals(this.emailAddress, other.emailAddress);
    }

    @Override
    public String toString() {
        return "EmailPojo{" + "personalDetail=" + personalDetail + ", emailAddress=" + emailAddress + '}';
    }

}
